#include <bits/stdc++.h>
using namespace std;

const string YES = "Yes";
const string NO = "No";

void solve(std::vector<std::vector<long long>> A, long long N,
           std::vector<long long> b)
{
    // table
    bool flag[3][3] = {false};
    string ans = "No";

    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            for (int k = 0; k < N; k++)
            {
                if (A[i][j] == b[k])
                    flag[i][j] = true;
            }
        }
    }

    // check
    for (int i = 0; i < 3; i++)
    {
        if (flag[i][0] && flag[i][1] && flag[i][2])
        {
            ans = "Yes";
        }
        if (flag[0][i] && flag[1][i] && flag[2][i])
        {
            ans = "Yes";
        }
    }
    if (flag[0][0] && flag[1][1] && flag[2][2])
    {
        ans = "Yes";
    }
    if (flag[0][2] && flag[1][1] && flag[2][0])
    {
        ans = "Yes";
    }
    cout << ans << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You
// use the default template now. You can remove this line by using your custom
// template)
int main()
{
    std::vector<std::vector<long long>> A(3, std::vector<long long>(3));
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            scanf("%lld", &A[i][j]);
        }
    }
    long long N;
    scanf("%lld", &N);
    std::vector<long long> b(N);
    for (int i = 0; i < N; i++)
    {
        scanf("%lld", &b[i]);
    }
    solve(std::move(A), N, std::move(b));
    return 0;
}
